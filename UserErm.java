package korail;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * 고객 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class UserErm implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 고객 번호. */
	private  userId;

	/** 예매. */
	private BookingErm booking;

	/** 고객명. */
	private  userNm;

	/** 고객 주소. */
	private  userAdd;

	/** 고객 번호. */
	private  userHp;

	/** 생년월일. */
	private  userBir;

	/** 마일리지. */
	private  mileage;

	/** 즐겨찾기 노선. */
	private  personalTrain;

	/** 계좌. */
	private  account;

	/** 새 테이블 목록. */
	private Set<CsServiceErm> csServiceSet;

	/** 결제 목록. */
	private Set<PayErm> paySet;

	/**
	 * 생성자.
	 */
	public UserErm() {
		this.csServiceSet = new HashSet<CsServiceErm>();
		this.paySet = new HashSet<PayErm>();
	}

	/**
	 * 고객 번호을 설정합니다..
	 * 
	 * @param userId
	 *            고객 번호
	 */
	public void setUserId( userId) {
		this.userId = userId;
	}

	/**
	 * 고객 번호을 가져옵니다..
	 * 
	 * @return 고객 번호
	 */
	public  getUserId() {
		return this.userId;
	}

	/**
	 * 예매을 설정합니다..
	 * 
	 * @param booking
	 *            예매
	 */
	public void setBooking(BookingErm booking) {
		this.booking = booking;
	}

	/**
	 * 예매을 가져옵니다..
	 * 
	 * @return 예매
	 */
	public BookingErm getBooking() {
		return this.booking;
	}

	/**
	 * 고객명을 설정합니다..
	 * 
	 * @param userNm
	 *            고객명
	 */
	public void setUserNm( userNm) {
		this.userNm = userNm;
	}

	/**
	 * 고객명을 가져옵니다..
	 * 
	 * @return 고객명
	 */
	public  getUserNm() {
		return this.userNm;
	}

	/**
	 * 고객 주소을 설정합니다..
	 * 
	 * @param userAdd
	 *            고객 주소
	 */
	public void setUserAdd( userAdd) {
		this.userAdd = userAdd;
	}

	/**
	 * 고객 주소을 가져옵니다..
	 * 
	 * @return 고객 주소
	 */
	public  getUserAdd() {
		return this.userAdd;
	}

	/**
	 * 고객 번호을 설정합니다..
	 * 
	 * @param userHp
	 *            고객 번호
	 */
	public void setUserHp( userHp) {
		this.userHp = userHp;
	}

	/**
	 * 고객 번호을 가져옵니다..
	 * 
	 * @return 고객 번호
	 */
	public  getUserHp() {
		return this.userHp;
	}

	/**
	 * 생년월일을 설정합니다..
	 * 
	 * @param userBir
	 *            생년월일
	 */
	public void setUserBir( userBir) {
		this.userBir = userBir;
	}

	/**
	 * 생년월일을 가져옵니다..
	 * 
	 * @return 생년월일
	 */
	public  getUserBir() {
		return this.userBir;
	}

	/**
	 * 마일리지을 설정합니다..
	 * 
	 * @param mileage
	 *            마일리지
	 */
	public void setMileage( mileage) {
		this.mileage = mileage;
	}

	/**
	 * 마일리지을 가져옵니다..
	 * 
	 * @return 마일리지
	 */
	public  getMileage() {
		return this.mileage;
	}

	/**
	 * 즐겨찾기 노선을 설정합니다..
	 * 
	 * @param personalTrain
	 *            즐겨찾기 노선
	 */
	public void setPersonalTrain( personalTrain) {
		this.personalTrain = personalTrain;
	}

	/**
	 * 즐겨찾기 노선을 가져옵니다..
	 * 
	 * @return 즐겨찾기 노선
	 */
	public  getPersonalTrain() {
		return this.personalTrain;
	}

	/**
	 * 계좌을 설정합니다..
	 * 
	 * @param account
	 *            계좌
	 */
	public void setAccount( account) {
		this.account = account;
	}

	/**
	 * 계좌을 가져옵니다..
	 * 
	 * @return 계좌
	 */
	public  getAccount() {
		return this.account;
	}

	/**
	 * 새 테이블 목록을 설정합니다..
	 * 
	 * @param csServiceSet
	 *            새 테이블 목록
	 */
	public void setCsServiceSet(Set<CsServiceErm> csServiceSet) {
		this.csServiceSet = csServiceSet;
	}

	/**
	 * 새 테이블를 추가합니다..
	 * 
	 * @param csService
	 *            새 테이블
	 */
	public void addCsService(CsServiceErm csService) {
		this.csServiceSet.add(csService);
	}

	/**
	 * 새 테이블 목록을 가져옵니다..
	 * 
	 * @return 새 테이블 목록
	 */
	public Set<CsServiceErm> getCsServiceSet() {
		return this.csServiceSet;
	}

	/**
	 * 결제 목록을 설정합니다..
	 * 
	 * @param paySet
	 *            결제 목록
	 */
	public void setPaySet(Set<PayErm> paySet) {
		this.paySet = paySet;
	}

	/**
	 * 결제를 추가합니다..
	 * 
	 * @param pay
	 *            결제
	 */
	public void addPay(PayErm pay) {
		this.paySet.add(pay);
	}

	/**
	 * 결제 목록을 가져옵니다..
	 * 
	 * @return 결제 목록
	 */
	public Set<PayErm> getPaySet() {
		return this.paySet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((userId == null) ? 0 : userId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		UserErm other = (UserErm) obj;
		if (userId == null) {
			if (other.userId != null) {
				return false;
			}
		} else if (!userId.equals(other.userId)) {
			return false;
		}
		return true;
	}

}
